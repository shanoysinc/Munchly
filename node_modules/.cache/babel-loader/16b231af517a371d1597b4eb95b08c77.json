{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ShanoySinc\\\\Documents\\\\Project CODE\\\\Proact\\\\urlshortener\\\\src\\\\components\\\\AddUrl.js\";\nimport React, { Component } from \"react\";\nimport parse from \"url-parse\";\nconst DICTIONARY = \"abcdefghijklmnopqrstuvwuxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nlet parser = parse; // const randomColor = [\"lightblue\", \"black\", \"lightpurple\"];\n// let style = randomColor[Math.floor(Math.random() * randomColor.length)];\n\nclass AddUrl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: \"\",\n      encodeNumber: 101023,\n      munchList: [],\n      key: \"\"\n    };\n\n    this.urlHandler = e => {\n      this.setState({\n        url: e.target.value\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      const key = this.encode(this.state.encodeNumber); //console.log(\"key\", key);\n\n      this.setState({\n        munchList: [...this.state.munchList, {\n          key: key,\n          link: this.state.url,\n          id: this.state.encodeNumber\n        }],\n        encodeNumber: this.state.encodeNumber + 531\n      });\n      console.log(this.state.munchList);\n    };\n  }\n\n  encode(num) {\n    const base = DICTIONARY.length;\n    let encoded = \"\";\n\n    if (num === DICTIONARY[0]) {\n      return DICTIONARY[0];\n    }\n\n    while (num > 0) {\n      encoded += DICTIONARY[num % base];\n      num = Math.floor(num / base);\n    }\n\n    return this.reverseWord(encoded);\n  }\n\n  reverseWord(str) {\n    let reverse = \"\";\n\n    for (let i = str.length - 1; i >= 0; i--) {\n      reverse += str.charAt(i);\n    }\n\n    return reverse;\n  }\n\n  render() {\n    // style = randomColor[Math.floor(Math.random() * randomColor.length)];\n    // console.log(\"style\", style);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.url,\n      className: \"addUrl\",\n      onChange: this.urlHandler,\n      type: \"text\",\n      placeholder: \"Enter Url...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \"Url list\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \"See Where It Goes\", /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"silly-face\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, \"\\uD83E\\uDD2A\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, this.state.munchList.map(url => {\n      parser = parse(\"hostname\", this.state.munchList[url.key]);\n      console.log(parser.hostname);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: url.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }\n      }, parser.hostname), /*#__PURE__*/React.createElement(\"button\", {\n        className: `url-btn ${this.props.color}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        href: url.link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 37\n        }\n      }, `Munch.ly/${url.key}`)));\n    })));\n  }\n\n}\n\nexport default AddUrl;","map":{"version":3,"sources":["C:/Users/ShanoySinc/Documents/Project CODE/Proact/urlshortener/src/components/AddUrl.js"],"names":["React","Component","parse","DICTIONARY","parser","AddUrl","constructor","props","state","url","encodeNumber","munchList","key","urlHandler","e","setState","target","value","submitHandler","preventDefault","encode","link","id","console","log","num","base","length","encoded","Math","floor","reverseWord","str","reverse","i","charAt","render","map","hostname","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport parse from \"url-parse\";\r\nconst DICTIONARY = \"abcdefghijklmnopqrstuvwuxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\r\nlet parser = parse;\r\n// const randomColor = [\"lightblue\", \"black\", \"lightpurple\"];\r\n// let style = randomColor[Math.floor(Math.random() * randomColor.length)];\r\nclass AddUrl extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        url: \"\",\r\n        encodeNumber: 101023,\r\n        munchList: [],\r\n        key: \"\",\r\n    };\r\n\r\n    encode(num) {\r\n        const base = DICTIONARY.length;\r\n        let encoded = \"\";\r\n\r\n        if (num === DICTIONARY[0]) {\r\n            return DICTIONARY[0];\r\n        }\r\n\r\n        while (num > 0) {\r\n            encoded += DICTIONARY[num % base];\r\n            num = Math.floor(num / base);\r\n        }\r\n\r\n        return this.reverseWord(encoded);\r\n    }\r\n\r\n    reverseWord(str) {\r\n        let reverse = \"\";\r\n        for (let i = str.length - 1; i >= 0; i--) {\r\n            reverse += str.charAt(i);\r\n        }\r\n        return reverse;\r\n    }\r\n\r\n    urlHandler = (e) => {\r\n        this.setState({ url: e.target.value });\r\n    };\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const key = this.encode(this.state.encodeNumber);\r\n\r\n        //console.log(\"key\", key);\r\n        this.setState({\r\n            munchList: [\r\n                ...this.state.munchList,\r\n                {\r\n                    key: key,\r\n                    link: this.state.url,\r\n                    id: this.state.encodeNumber,\r\n                },\r\n            ],\r\n            encodeNumber: this.state.encodeNumber + 531,\r\n        });\r\n\r\n        console.log(this.state.munchList);\r\n    };\r\n\r\n    render() {\r\n        // style = randomColor[Math.floor(Math.random() * randomColor.length)];\r\n        // console.log(\"style\", style);\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.submitHandler}>\r\n                    <input\r\n                        value={this.state.url}\r\n                        className=\"addUrl\"\r\n                        onChange={this.urlHandler}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Url...\"\r\n                    />\r\n                </form>\r\n                <h1>Url list</h1>\r\n                <h2>\r\n                    See Where It Goes\r\n                    <span role=\"img\" aria-label=\"silly-face\">\r\n                        🤪\r\n                    </span>\r\n                </h2>\r\n                <hr />\r\n                <div className=\"container\">\r\n                    {this.state.munchList.map((url) => {\r\n                        parser = parse(\r\n                            \"hostname\",\r\n                            this.state.munchList[url.key]\r\n                        );\r\n                        console.log(parser.hostname);\r\n                        return (\r\n                            <div key={url.id}>\r\n                                <h3>{parser.hostname}</h3>\r\n                                <button\r\n                                    className={`url-btn ${this.props.color}`}\r\n                                >\r\n                                    <a\r\n                                        rel=\"noopener noreferrer\"\r\n                                        target=\"_blank\"\r\n                                        href={url.link}\r\n                                    >{`Munch.ly/${url.key}`}</a>\r\n                                </button>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AddUrl;\r\n"]},"metadata":{},"sourceType":"module"}