{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ShanoySinc\\\\Documents\\\\Project CODE\\\\Proact\\\\urlshortener\\\\src\\\\components\\\\AddUrl.js\";\nimport React, { Component } from 'react';\nconst DICTIONARY = 'abcdefghijklmnopqrstuvwuxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst munchList = [];\n\nfunction encode(num) {\n  const base = DICTIONARY.length;\n  let encoded = '';\n\n  if (num === DICTIONARY[0]) {\n    return DICTIONARY[0];\n  }\n\n  while (num > 0) {\n    encoded += DICTIONARY[num % base];\n    num = Math.floor(num / base);\n  }\n\n  return reverseWord(encoded);\n}\n\nfunction reverseWord(str) {\n  let reverse = \"\";\n\n  for (let i = str.length - 1; i >= 0; i--) {\n    reverse += str.charAt(i);\n  }\n\n  return reverse;\n}\n\nfunction decode(id) {\n  const base = DICTIONARY.length;\n  let decoded = 0;\n\n  for (let i = 0; i < id.split(\"\").length; i++) {\n    decoded = decoded * base + DICTIONARY.indexOf(id.charAt(i));\n  }\n\n  return decoded;\n}\n\nclass AddUrl extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      url: '',\n      encodeNumber: 101023,\n      munchList: []\n    };\n\n    this.urlHandler = e => {\n      this.setState({\n        url: e.target.value\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault(); //console.log(url)\n\n      let list = {};\n      list[encode(encodeNumber)] = url;\n      munchList.push(list);\n      setEncodeNumber(encodeNumber + 583);\n      console.log(munchList);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: url,\n      className: \"addUrl\",\n      onChange: this.urlHandler,\n      type: \"text\",\n      placeholder: \"Enter Url...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Url list\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default AddUrl;","map":{"version":3,"sources":["C:/Users/ShanoySinc/Documents/Project CODE/Proact/urlshortener/src/components/AddUrl.js"],"names":["React","Component","DICTIONARY","munchList","encode","num","base","length","encoded","Math","floor","reverseWord","str","reverse","i","charAt","decode","id","decoded","split","indexOf","AddUrl","state","url","encodeNumber","urlHandler","e","setState","target","value","submitHandler","preventDefault","list","push","setEncodeNumber","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst DICTIONARY = 'abcdefghijklmnopqrstuvwuxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\r\nconst munchList = []\r\n\r\nfunction encode(num) {\r\n    const base = DICTIONARY.length;\r\n    let encoded = '';\r\n\r\n    if (num === DICTIONARY[0]) {\r\n        return DICTIONARY[0]\r\n    }\r\n\r\n    while (num > 0) {\r\n        encoded += DICTIONARY[num % base];\r\n        num = Math.floor(num / base)\r\n    }\r\n\r\n    return reverseWord(encoded)\r\n}\r\n\r\nfunction reverseWord(str) {\r\n    let reverse = \"\"\r\n    for (let i = str.length - 1; i >= 0; i--) {\r\n        reverse += str.charAt(i)\r\n\r\n    }\r\n    return reverse\r\n}\r\n\r\nfunction decode(id) {\r\n    const base = DICTIONARY.length\r\n    let decoded = 0\r\n\r\n    for (let i = 0; i < id.split(\"\").length; i++) {\r\n        decoded = decoded * base + DICTIONARY.indexOf(id.charAt(i))\r\n    }\r\n\r\n    return decoded\r\n}\r\n\r\n\r\n\r\n\r\nclass AddUrl extends Component {\r\n\r\n    state = {\r\n        url: '',\r\n        encodeNumber: 101023,\r\n        munchList: []\r\n    }\r\n\r\n    // const[url, setUrl] = useState('')\r\n    // const[encodeNumber, setEncodeNumber] = useState(1000)\r\n    // const [munchList, setMunchList] = useState([])\r\n\r\n    urlHandler = (e) => {\r\n        this.setState({ url: e.target.value })\r\n\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //console.log(url)\r\n        let list = {}\r\n\r\n        list[encode(encodeNumber)] = url\r\n        munchList.push(list)\r\n        setEncodeNumber(encodeNumber + 583)\r\n\r\n        console.log(munchList)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.submitHandler}>\r\n                    <input value={url} className=\"addUrl\" onChange={this.urlHandler} type=\"text\" placeholder=\"Enter Url...\" />\r\n                </form>\r\n                <h1>Url list</h1>\r\n                <hr />\r\n                <div className=\"container\">\r\n                    <div>\r\n                        {/* {munchList.map(list => (\r\n                        <>\r\n                            <h3>google </h3>\r\n                            <button className=\"url-btn\"><a target=\"_blank\" href={list}>{`Munch.ly/${list}`}</a></button>\r\n                        </>\r\n                    ))} */}\r\n\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    };\r\n}\r\nexport default AddUrl;\r\n\r\n"]},"metadata":{},"sourceType":"module"}