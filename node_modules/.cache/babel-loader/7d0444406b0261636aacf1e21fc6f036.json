{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ShanoySinc\\\\Documents\\\\Project CODE\\\\Proact\\\\urlshortener\\\\src\\\\components\\\\AddUrl.js\";\nimport React, { Component } from \"react\";\nimport Url from \"url-parse\";\nimport Links from \"../data/Links\";\nimport encode from \"../algorithm/stringShortener\";\n\nclass AddUrl extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      url: \"\",\n      encodeNumber: 101021,\n      munchList: Links,\n      key: \"\",\n      color: [\"orange\", \"black\", \"lightpurple\", \"pink\", \"yellow\", \"darkred\"],\n      currentColor: \"orange\"\n    };\n\n    this.urlHandler = e => {\n      this.setState({\n        url: e.target.value\n      });\n    };\n\n    this.colorPicker = () => {\n      let randomColor = this.state.color[Math.floor(Math.random() * this.state.color.length)];\n      return this.setState({\n        currentColor: randomColor\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      const key = encode(this.state.encodeNumber);\n      this.setState({\n        munchList: [...this.state.munchList, {\n          key: key,\n          link: this.state.url,\n          id: this.state.encodeNumber,\n          color: this.state.currentColor\n        }],\n        encodeNumber: this.state.encodeNumber + 531\n      });\n      this.colorPicker();\n    };\n  }\n\n  render() {\n    let parser = Url;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.url,\n      className: \"addUrl\",\n      onChange: this.urlHandler,\n      type: \"text\",\n      placeholder: \"Enter Url...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Url list\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"See Where It Goes\", /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"silly-face\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, \"\\uD83E\\uDD2A\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, this.state.munchList.map(url => {\n      parser = new Url(url.link);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: url.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 33\n        }\n      }, parser.hostname.replace(\"www.\", \"\")), /*#__PURE__*/React.createElement(\"button\", {\n        className: `url-btn ${url.color}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        href: url.link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 37\n        }\n      }, `Munch.ly/${url.key}`)));\n    })));\n  }\n\n}\n\nexport default AddUrl;","map":{"version":3,"sources":["C:/Users/ShanoySinc/Documents/Project CODE/Proact/urlshortener/src/components/AddUrl.js"],"names":["React","Component","Url","Links","encode","AddUrl","state","url","encodeNumber","munchList","key","color","currentColor","urlHandler","e","setState","target","value","colorPicker","randomColor","Math","floor","random","length","submitHandler","preventDefault","link","id","render","parser","map","hostname","replace"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Url from \"url-parse\";\r\nimport Links from \"../data/Links\";\r\nimport encode from \"../algorithm/stringShortener\";\r\nclass AddUrl extends Component {\r\n    state = {\r\n        url: \"\",\r\n        encodeNumber: 101021,\r\n        munchList: Links,\r\n        key: \"\",\r\n        color: [\"orange\", \"black\", \"lightpurple\", \"pink\", \"yellow\", \"darkred\"],\r\n        currentColor: \"orange\",\r\n    };\r\n\r\n    // encode(num) {\r\n    //     const DICTIONARY =\r\n    //         \"abcdefghijklmnopqrstuvwuxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    //     const base = DICTIONARY.length;\r\n    //     let encoded = \"\";\r\n\r\n    //     if (num === DICTIONARY[0]) {\r\n    //         return DICTIONARY[0];\r\n    //     }\r\n\r\n    //     while (num > 0) {\r\n    //         encoded += DICTIONARY[num % base];\r\n    //         num = Math.floor(num / base);\r\n    //     }\r\n\r\n    //     return this.reverseWord(encoded);\r\n    // }\r\n\r\n    // reverseWord(str) {\r\n    //     let reverse = \"\";\r\n    //     for (let i = str.length - 1; i >= 0; i--) {\r\n    //         reverse += str.charAt(i);\r\n    //     }\r\n    //     return reverse;\r\n    // }\r\n\r\n    urlHandler = (e) => {\r\n        this.setState({ url: e.target.value });\r\n    };\r\n\r\n    colorPicker = () => {\r\n        let randomColor = this.state.color[\r\n            Math.floor(Math.random() * this.state.color.length)\r\n        ];\r\n        return this.setState({\r\n            currentColor: randomColor,\r\n        });\r\n    };\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const key = encode(this.state.encodeNumber);\r\n\r\n        this.setState({\r\n            munchList: [\r\n                ...this.state.munchList,\r\n                {\r\n                    key: key,\r\n                    link: this.state.url,\r\n                    id: this.state.encodeNumber,\r\n                    color: this.state.currentColor,\r\n                },\r\n            ],\r\n            encodeNumber: this.state.encodeNumber + 531,\r\n        });\r\n\r\n        this.colorPicker();\r\n    };\r\n\r\n    render() {\r\n        let parser = Url;\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.submitHandler}>\r\n                    <input\r\n                        value={this.state.url}\r\n                        className=\"addUrl\"\r\n                        onChange={this.urlHandler}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Url...\"\r\n                    />\r\n                </form>\r\n                <h2>Url list</h2>\r\n                <h3>\r\n                    See Where It Goes\r\n                    <span role=\"img\" aria-label=\"silly-face\">\r\n                        🤪\r\n                    </span>\r\n                </h3>\r\n                <hr />\r\n                <div className=\"container\">\r\n                    {this.state.munchList.map((url) => {\r\n                        parser = new Url(url.link);\r\n                        return (\r\n                            <div key={url.id}>\r\n                                <h5>{parser.hostname.replace(\"www.\", \"\")}</h5>\r\n                                <button className={`url-btn ${url.color}`}>\r\n                                    <a\r\n                                        rel=\"noopener noreferrer\"\r\n                                        target=\"_blank\"\r\n                                        href={url.link}\r\n                                    >{`Munch.ly/${url.key}`}</a>\r\n                                </button>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AddUrl;\r\n"]},"metadata":{},"sourceType":"module"}