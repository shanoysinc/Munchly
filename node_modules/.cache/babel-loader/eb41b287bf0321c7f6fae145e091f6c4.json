{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ShanoySinc\\\\Documents\\\\Project CODE\\\\Proact\\\\urlshortener\\\\src\\\\components\\\\AddUrl.js\";\nimport React, { useState } from 'react';\n\nconst AddUrl = () => {\n  const DICTIONARY = 'abcdefghijklmnopqrstuvwuxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const munchList = [];\n\n  function encode(num) {\n    const base = DICTIONARY.length;\n    let encoded = '';\n\n    if (num === DICTIONARY[0]) {\n      return DICTIONARY[0];\n    }\n\n    while (num > 0) {\n      encoded += DICTIONARY[num % base];\n      num = Math.floor(num / base);\n    }\n\n    return reverseWord(encoded);\n  }\n\n  function reverseWord(str) {\n    let reverse = \"\";\n\n    for (let i = str.length - 1; i >= 0; i--) {\n      reverse += str.charAt(i);\n    }\n\n    return reverse;\n  }\n\n  function decode(id) {\n    const base = DICTIONARY.length;\n    let decoded = 0;\n\n    for (let i = 0; i < id.split(\"\").length; i++) {\n      decoded = decoded * base + DICTIONARY.indexOf(id.charAt(i));\n    }\n\n    return decoded;\n  }\n\n  const [url, setUrl] = useState('');\n  const [encodeNumber, setEncodeNumber] = useState(1000);\n\n  const urlHandler = e => {\n    setUrl(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault(); //console.log(url)\n\n    let list = {};\n    list[encode(encodeNumber)] = url;\n    munchList.push(list);\n    setEncodeNumber(encodeNumber + 583);\n    list = null;\n    console.log(munchList);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: url,\n    className: \"addUrl\",\n    onChange: urlHandler,\n    type: \"text\",\n    placeholder: \"Enter Url...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Url list\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, munchList.map(list => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"google \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"url-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    href: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 57\n    }\n  }, `Munch.ly/${list}`)))))));\n};\n\nexport default AddUrl;","map":{"version":3,"sources":["C:/Users/ShanoySinc/Documents/Project CODE/Proact/urlshortener/src/components/AddUrl.js"],"names":["React","useState","AddUrl","DICTIONARY","munchList","encode","num","base","length","encoded","Math","floor","reverseWord","str","reverse","i","charAt","decode","id","decoded","split","indexOf","url","setUrl","encodeNumber","setEncodeNumber","urlHandler","e","target","value","submitHandler","preventDefault","list","push","console","log","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddUrl = () => {\r\n    const DICTIONARY = 'abcdefghijklmnopqrstuvwuxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\r\n    const munchList = []\r\n\r\n    function encode(num) {\r\n        const base = DICTIONARY.length;\r\n        let encoded = '';\r\n\r\n        if (num === DICTIONARY[0]) {\r\n            return DICTIONARY[0]\r\n        }\r\n\r\n        while (num > 0) {\r\n            encoded += DICTIONARY[num % base];\r\n            num = Math.floor(num / base)\r\n        }\r\n\r\n        return reverseWord(encoded)\r\n    }\r\n\r\n    function reverseWord(str) {\r\n        let reverse = \"\"\r\n        for (let i = str.length - 1; i >= 0; i--) {\r\n            reverse += str.charAt(i)\r\n\r\n        }\r\n        return reverse\r\n    }\r\n\r\n    function decode(id) {\r\n        const base = DICTIONARY.length\r\n        let decoded = 0\r\n\r\n        for (let i = 0; i < id.split(\"\").length; i++) {\r\n            decoded = decoded * base + DICTIONARY.indexOf(id.charAt(i))\r\n        }\r\n\r\n        return decoded\r\n    }\r\n\r\n\r\n\r\n\r\n    const [url, setUrl] = useState('')\r\n    const [encodeNumber, setEncodeNumber] = useState(1000)\r\n\r\n    const urlHandler = (e) => {\r\n        setUrl(e.target.value)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //console.log(url)\r\n        let list = {}\r\n\r\n        list[encode(encodeNumber)] = url\r\n        munchList.push(list)\r\n        setEncodeNumber(encodeNumber + 583)\r\n        list = null\r\n        console.log(munchList)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submitHandler}>\r\n                <input value={url} className=\"addUrl\" onChange={urlHandler} type=\"text\" placeholder=\"Enter Url...\" />\r\n            </form>\r\n            <h1>Url list</h1>\r\n            <hr />\r\n            <div className=\"container\">\r\n                <div>\r\n                    {munchList.map(list => (\r\n                        <>\r\n                            <h3>google </h3>\r\n                            <button className=\"url-btn\"><a target=\"_blank\" href={list}>{`Munch.ly/${list}`}</a></button>\r\n                        </>\r\n                    ))}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddUrl;"]},"metadata":{},"sourceType":"module"}