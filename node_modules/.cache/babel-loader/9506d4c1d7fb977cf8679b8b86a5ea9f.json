{"ast":null,"code":"const encode = num => {\n  const DICTIONARY = \"abcdefghijklmnopqrstuvwuxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  const base = DICTIONARY.length;\n  let encoded = \"\";\n\n  if (num === DICTIONARY[0]) {\n    return DICTIONARY[0];\n  }\n\n  while (num > 0) {\n    encoded += DICTIONARY[num % base];\n    num = Math.floor(num / base);\n  }\n\n  return this.reverseWord(encoded);\n};\n\nconst reverseWord = str => {\n  let reverse = \"\";\n\n  for (let i = str.length - 1; i >= 0; i--) {\n    reverse += str.charAt(i);\n  }\n\n  return reverse;\n};\n\nexport default encode;","map":{"version":3,"sources":["C:/Users/ShanoySinc/Documents/Project CODE/Proact/urlshortener/src/algorithm/stringShortener.js"],"names":["encode","num","DICTIONARY","base","length","encoded","Math","floor","reverseWord","str","reverse","i","charAt"],"mappings":"AAAA,MAAMA,MAAM,GAAIC,GAAD,IAAS;AACpB,QAAMC,UAAU,GACZ,uDADJ;AAEA,QAAMC,IAAI,GAAGD,UAAU,CAACE,MAAxB;AACA,MAAIC,OAAO,GAAG,EAAd;;AAEA,MAAIJ,GAAG,KAAKC,UAAU,CAAC,CAAD,CAAtB,EAA2B;AACvB,WAAOA,UAAU,CAAC,CAAD,CAAjB;AACH;;AAED,SAAOD,GAAG,GAAG,CAAb,EAAgB;AACZI,IAAAA,OAAO,IAAIH,UAAU,CAACD,GAAG,GAAGE,IAAP,CAArB;AACAF,IAAAA,GAAG,GAAGK,IAAI,CAACC,KAAL,CAAWN,GAAG,GAAGE,IAAjB,CAAN;AACH;;AAED,SAAO,KAAKK,WAAL,CAAiBH,OAAjB,CAAP;AACH,CAhBD;;AAkBA,MAAMG,WAAW,GAAIC,GAAD,IAAS;AACzB,MAAIC,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,CAAC,GAAGF,GAAG,CAACL,MAAJ,GAAa,CAA1B,EAA6BO,CAAC,IAAI,CAAlC,EAAqCA,CAAC,EAAtC,EAA0C;AACtCD,IAAAA,OAAO,IAAID,GAAG,CAACG,MAAJ,CAAWD,CAAX,CAAX;AACH;;AACD,SAAOD,OAAP;AACH,CAND;;AAQA,eAAeV,MAAf","sourcesContent":["const encode = (num) => {\r\n    const DICTIONARY =\r\n        \"abcdefghijklmnopqrstuvwuxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    const base = DICTIONARY.length;\r\n    let encoded = \"\";\r\n\r\n    if (num === DICTIONARY[0]) {\r\n        return DICTIONARY[0];\r\n    }\r\n\r\n    while (num > 0) {\r\n        encoded += DICTIONARY[num % base];\r\n        num = Math.floor(num / base);\r\n    }\r\n\r\n    return this.reverseWord(encoded);\r\n}\r\n\r\nconst reverseWord = (str) => {\r\n    let reverse = \"\";\r\n    for (let i = str.length - 1; i >= 0; i--) {\r\n        reverse += str.charAt(i);\r\n    }\r\n    return reverse;\r\n}\r\n\r\nexport default encode"]},"metadata":{},"sourceType":"module"}