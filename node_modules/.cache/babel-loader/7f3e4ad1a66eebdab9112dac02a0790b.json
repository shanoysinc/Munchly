{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ShanoySinc\\\\Documents\\\\Project CODE\\\\Proact\\\\urlshortener\\\\src\\\\components\\\\AddUrl.js\";\nimport React, { Component } from \"react\";\nimport parse from \"url-parse\";\nconst DICTIONARY = \"abcdefghijklmnopqrstuvwuxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nlet parser = parse; // const randomColor = [\"lightblue\", \"black\", \"lightpurple\"];\n// let style = randomColor[Math.floor(Math.random() * randomColor.length)];\n\nclass AddUrl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: \"\",\n      encodeNumber: 101023,\n      munchList: [],\n      key: \"\",\n      color: [\"lightblue\", \"black\", \"lightpurple\"],\n      currentColor: \"lightblue\"\n    };\n\n    this.urlHandler = e => {\n      this.setState({\n        url: e.target.value\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      const key = this.encode(this.state.encodeNumber); //console.log(\"key\", key);\n\n      this.setState({\n        munchList: [...this.state.munchList, {\n          key: key,\n          link: this.state.url,\n          id: this.state.encodeNumber\n        }],\n        encodeNumber: this.state.encodeNumber + 531\n      });\n      console.log(this.state.munchList);\n      this.colorPicker();\n    };\n\n    this.colorPicker = () => {\n      let randomColor = this.state.color[Math.floor(Math.random() * this.state.color.length)];\n      this.setState({\n        color: this.state.color[Math.floor(Math.random() * this.state.color.length)]\n      });\n    };\n  }\n\n  encode(num) {\n    const base = DICTIONARY.length;\n    let encoded = \"\";\n\n    if (num === DICTIONARY[0]) {\n      return DICTIONARY[0];\n    }\n\n    while (num > 0) {\n      encoded += DICTIONARY[num % base];\n      num = Math.floor(num / base);\n    }\n\n    return this.reverseWord(encoded);\n  }\n\n  reverseWord(str) {\n    let reverse = \"\";\n\n    for (let i = str.length - 1; i >= 0; i--) {\n      reverse += str.charAt(i);\n    }\n\n    return reverse;\n  }\n\n  render() {\n    // style = randomColor[Math.floor(Math.random() * randomColor.length)];\n    // console.log(\"style\", style);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.url,\n      className: \"addUrl\",\n      onChange: this.urlHandler,\n      type: \"text\",\n      placeholder: \"Enter Url...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Url list\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"See Where It Goes\", /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"silly-face\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"\\uD83E\\uDD2A\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, this.state.munchList.map(url => {\n      parser = parse(\"hostname\", this.state.munchList[url.key]);\n      console.log(parser.hostname);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: url.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }\n      }, parser.hostname), /*#__PURE__*/React.createElement(\"button\", {\n        className: `url-btn ${this.state.color}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        href: url.link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 37\n        }\n      }, `Munch.ly/${url.key}`)));\n    })));\n  }\n\n}\n\nexport default AddUrl;","map":{"version":3,"sources":["C:/Users/ShanoySinc/Documents/Project CODE/Proact/urlshortener/src/components/AddUrl.js"],"names":["React","Component","parse","DICTIONARY","parser","AddUrl","constructor","props","state","url","encodeNumber","munchList","key","color","currentColor","urlHandler","e","setState","target","value","submitHandler","preventDefault","encode","link","id","console","log","colorPicker","randomColor","Math","floor","random","length","num","base","encoded","reverseWord","str","reverse","i","charAt","render","map","hostname"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport parse from \"url-parse\";\r\nconst DICTIONARY = \"abcdefghijklmnopqrstuvwuxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\r\nlet parser = parse;\r\n// const randomColor = [\"lightblue\", \"black\", \"lightpurple\"];\r\n// let style = randomColor[Math.floor(Math.random() * randomColor.length)];\r\nclass AddUrl extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        url: \"\",\r\n        encodeNumber: 101023,\r\n        munchList: [],\r\n        key: \"\",\r\n        color: [\"lightblue\", \"black\", \"lightpurple\"],\r\n        currentColor: \"lightblue\",\r\n    };\r\n\r\n    encode(num) {\r\n        const base = DICTIONARY.length;\r\n        let encoded = \"\";\r\n\r\n        if (num === DICTIONARY[0]) {\r\n            return DICTIONARY[0];\r\n        }\r\n\r\n        while (num > 0) {\r\n            encoded += DICTIONARY[num % base];\r\n            num = Math.floor(num / base);\r\n        }\r\n\r\n        return this.reverseWord(encoded);\r\n    }\r\n\r\n    reverseWord(str) {\r\n        let reverse = \"\";\r\n        for (let i = str.length - 1; i >= 0; i--) {\r\n            reverse += str.charAt(i);\r\n        }\r\n        return reverse;\r\n    }\r\n\r\n    urlHandler = (e) => {\r\n        this.setState({ url: e.target.value });\r\n    };\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const key = this.encode(this.state.encodeNumber);\r\n\r\n        //console.log(\"key\", key);\r\n        this.setState({\r\n            munchList: [\r\n                ...this.state.munchList,\r\n                {\r\n                    key: key,\r\n                    link: this.state.url,\r\n                    id: this.state.encodeNumber,\r\n                },\r\n            ],\r\n            encodeNumber: this.state.encodeNumber + 531,\r\n        });\r\n\r\n        console.log(this.state.munchList);\r\n        this.colorPicker();\r\n    };\r\n\r\n    colorPicker = () => {\r\n        let randomColor = this.state.color[\r\n            Math.floor(Math.random() * this.state.color.length)\r\n        ];\r\n        this.setState({\r\n            color: this.state.color[\r\n                Math.floor(Math.random() * this.state.color.length)\r\n            ],\r\n        });\r\n    };\r\n\r\n    render() {\r\n        // style = randomColor[Math.floor(Math.random() * randomColor.length)];\r\n        // console.log(\"style\", style);\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.submitHandler}>\r\n                    <input\r\n                        value={this.state.url}\r\n                        className=\"addUrl\"\r\n                        onChange={this.urlHandler}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Url...\"\r\n                    />\r\n                </form>\r\n                <h1>Url list</h1>\r\n                <h2>\r\n                    See Where It Goes\r\n                    <span role=\"img\" aria-label=\"silly-face\">\r\n                        🤪\r\n                    </span>\r\n                </h2>\r\n                <hr />\r\n                <div className=\"container\">\r\n                    {this.state.munchList.map((url) => {\r\n                        parser = parse(\r\n                            \"hostname\",\r\n                            this.state.munchList[url.key]\r\n                        );\r\n                        console.log(parser.hostname);\r\n                        return (\r\n                            <div key={url.id}>\r\n                                <h3>{parser.hostname}</h3>\r\n                                <button\r\n                                    className={`url-btn ${this.state.color}`}\r\n                                >\r\n                                    <a\r\n                                        rel=\"noopener noreferrer\"\r\n                                        target=\"_blank\"\r\n                                        href={url.link}\r\n                                    >{`Munch.ly/${url.key}`}</a>\r\n                                </button>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AddUrl;\r\n"]},"metadata":{},"sourceType":"module"}