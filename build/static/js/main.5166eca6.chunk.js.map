{"version":3,"sources":["data/Links.js","algorithm/stringShortener.js","components/AddUrl.js","components/Header.js","components/Footer.js","App.js","index.js"],"names":["Links","key","link","id","color","reverseWord","str","reverse","i","length","charAt","encode","num","DICTIONARY","base","encoded","Math","floor","AddUrl","state","url","encodeNumber","munchList","currentColor","isLoading","urlHandler","e","target","value","setState","colorPicker","randomColor","random","submitHandler","preventDefault","includes","console","log","AddUrlHanlder","setTimeout","parser","Url","onSubmit","this","className","onChange","type","placeholder","onClick","role","aria-label","reversed","map","hostname","replace","rel","href","Component","React","memo","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5166eca6.chunk.js","sourcesContent":["const Links = [\r\n    {\r\n        key: 'Arz',\r\n        link: 'https://colorhunt.co/',\r\n        id: 101023,\r\n        color: 'orange',\r\n    },\r\n    {\r\n        key: 'ArD',\r\n        link: 'https://www.youtube.com/watch?v=_393maHbHWc',\r\n        id: 101027,\r\n        color: 'black',\r\n    },\r\n    {\r\n        key: 'ArH',\r\n        link: 'https://www.youtube.com/watch?v=HfvG56U0gYA',\r\n        id: 101031,\r\n        color: 'yellow',\r\n    },\r\n    {\r\n        key: 'ArJ',\r\n        link: 'https://freecodecamp.org/',\r\n        id: 101033,\r\n        color: 'darkred',\r\n    },\r\n    {\r\n        key: 'ArL',\r\n        link: 'https://dev.to/',\r\n        id: 101035,\r\n        color: 'pink',\r\n    },\r\n    {\r\n        key: 'ArN',\r\n        link: 'https://hackernoon.com/',\r\n        id: 101037,\r\n        color: 'lightpurple',\r\n    },\r\n    {\r\n        key: 'ArP',\r\n        link: 'https://github.com/shanoysinc',\r\n        id: 101039,\r\n        color: 'darkred'\r\n    }\r\n]\r\n\r\nexport default Links\r\n\r\n// [\"orange\", \"black\", \"lightpurple\", \"pink\", \"yellow\", \"darkred\"],","const encode = (num) => {\r\n    const DICTIONARY =\r\n        \"abcdefghijklmnopqrstuvwuxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    const base = DICTIONARY.length;\r\n    let encoded = \"\";\r\n\r\n    if (num === DICTIONARY[0]) {\r\n        return DICTIONARY[0];\r\n    }\r\n\r\n    while (num > 0) {\r\n        encoded += DICTIONARY[num % base];\r\n        num = Math.floor(num / base);\r\n    }\r\n\r\n    return reverseWord(encoded);\r\n}\r\n\r\nconst reverseWord = (str) => {\r\n    let reverse = \"\";\r\n    for (let i = str.length - 1; i >= 0; i--) {\r\n        reverse += str.charAt(i);\r\n    }\r\n    return reverse;\r\n}\r\n\r\nexport default encode","import React, { Component } from \"react\";\r\nimport Url from \"url-parse\";\r\nimport Links from \"../data/Links\";\r\nimport encode from \"../algorithm/stringShortener\";\r\n\r\nclass AddUrl extends Component {\r\n    state = {\r\n        url: \"\",\r\n        encodeNumber: 101021,\r\n        munchList: Links,\r\n        key: \"\",\r\n        color: [\"orange\", \"black\", \"lightpurple\", \"pink\", \"yellow\", \"darkred\"],\r\n        currentColor: \"orange\",\r\n        isLoading: false,\r\n    };\r\n\r\n    urlHandler = (e) => {\r\n        let str = e.target.value\r\n\r\n        this.setState({ url: str });\r\n\r\n    };\r\n\r\n    colorPicker = () => {\r\n        let randomColor = this.state.color[\r\n            Math.floor(Math.random() * this.state.color.length)\r\n        ];\r\n        return this.setState({\r\n            currentColor: randomColor,\r\n        });\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        setTimeout(() => {\r\n            this.setState({\r\n                isLoading: false,\r\n            });\r\n        }, 4000);\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const key = encode(this.state.encodeNumber);\r\n\r\n        let str = ''\r\n        if (!this.state.url.includes('https://')) {\r\n            str = 'https://' + this.state.url\r\n        }\r\n\r\n        this.setState({\r\n            munchList: [\r\n                {\r\n                    key: key,\r\n                    link: str,\r\n                    id: this.state.encodeNumber,\r\n                    color: this.state.currentColor,\r\n                },\r\n                ...this.state.munchList,\r\n            ],\r\n            encodeNumber: this.state.encodeNumber + 531,\r\n            isLoading: true,\r\n        });\r\n        console.log(str)\r\n        this.colorPicker();\r\n    };\r\n\r\n    AddUrlHanlder = (e) => {\r\n        this.submitHandler(e);\r\n    };\r\n    render() {\r\n        let parser = Url;\r\n        console.log(\"addUrl rendering\");\r\n        return (\r\n            <>\r\n                <form onSubmit={this.submitHandler}>\r\n                    <input\r\n                        value={this.state.url}\r\n                        className=\"addUrl\"\r\n                        onChange={this.urlHandler}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Url To Munch eg. https://www.epicgames.com/...\"\r\n                    />\r\n                    <button className=\"addurl-btn\" onClick={this.AddUrlHanlder}>\r\n                        Munch\r\n                    </button>\r\n                </form>\r\n                <h2>list of Url's Around The Web</h2>\r\n                <h3>\r\n                    See Where It Goes\r\n                    <span role=\"img\" aria-label=\"silly-face\">\r\n                        🤪\r\n                    </span>\r\n                </h3>\r\n                <hr />\r\n                {this.state.isLoading ? (\r\n                    <>\r\n                        <h4>\r\n                            Simulation begin...\r\n                            <span role=\"img\" aria-label=\"silly-face\">\r\n                                😴\r\n                            </span>\r\n                        </h4>\r\n                        <div className=\"loader\"></div>\r\n                    </>\r\n                ) : (\r\n                        <ol className=\"container\" reversed>\r\n                            {this.state.munchList.map(\r\n                                ({ id, link, color, key }) => {\r\n                                    parser = new Url(link);\r\n                                    return (\r\n                                        <li key={id}>\r\n                                            <h5>\r\n                                                {parser.hostname.replace(\r\n                                                    \"www.\",\r\n                                                    \"\"\r\n                                                )}\r\n                                            </h5>\r\n                                            <button className={`url-btn ${color}`}>\r\n                                                <a\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                    target=\"_blank\"\r\n                                                    href={link}\r\n                                                >{`Munch.ly/${key}`}</a>\r\n                                            </button>\r\n                                        </li>\r\n                                    );\r\n                                }\r\n                            )}\r\n                        </ol>\r\n                    )}\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default AddUrl;\r\n","import React from 'react';\r\n\r\nconst Header = () => {\r\n    console.log('header rendering')\r\n    return (\r\n        <>\r\n            <h1>Munch.ly<span role=\"img\" aria-label=\"heart\">❤️</span></h1>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default React.memo(Header);","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footerHr\">\r\n            <hr ></hr>\r\n            <p className=\"creator\">Created by <a href=\"https://github.com/shanoysinc\" className=\"creator-name\">Shanoy Sinc\r\n            <span role=\"img\" aria-label=\"silly-face\">\r\n                    🤖\r\n                    </span>\r\n            </a></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport AddUrl from './components/AddUrl'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n// import SubHeader from './components/SubHeader'\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Header />\n      {/* <SubHeader /> */}\n      <AddUrl />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}